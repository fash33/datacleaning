sapply(daltons, class)
typeof(c("abc", "def"))
typeof(1:10)
typeof(c(pi,exp(1)))
typeof(factor("abd","def"))
mode(c("abc","de"))
mode(1:10)
mode(factor("abc", "def"))
storage.mode(factor("abc", "def"))
f <- factors(1,23,12,4,12,12,43,1,2,1,2,43,23)
f <- factor(1,23,12,4,12,12,43,1,2,1,2,43,23)
f <- factor(c(1,23,12,4,12,12,43,1,2,1,2,43,23))
levels(f)
f <- c(1,2,1,2,1,1,2,2,2,2,2,1,2,1,1,2,2,2,2,2,1,2)
recode <- c(male = 1, female = 2)
f <- factor(gender, levels  = recode, labels = names(recode))
f <- factor(f, levels  = recode, labels = names(recode))
f
g <- c(1,2,3,1,2,1,2,1,2,2,2,1,1,2,1,2,2,2,1)
g <- c(1,2,1,1,2,1,1,2,1)
recode
f <- factor(g, levels = recode  , labels = names(recode))
f
g <- c(1,2,3,1,1,2,1,1,2,1)
f <- factor(g, levels = recode  , labels = names(recode))
f
f <- factor(g, levels = recode  , labels = names(recode), ordered= TRUE)
f
f[1]>f[2]
f[2]
f[2]>f[1]
c<- Sys.time()
class(c)
c
library(lubridate)
dates <- c("15/02/2013", "15 Feb 13", "It happened on 15 02 '13")
dmy(dates)
dmy("01 01 68")
dmy("01 01 69")
dmy (" 14 febr. 2013")
dmy("14 feb. 2013")
dates <- c("15-9-2013", " 16-07-2018", 17 12-2207)
dates <- c("15-9-2013", " 16-07-2018", "17 12-2007")
as.POSIXct(dates, format="%d - %m - %Y")
?strptime
ls()
a <- 34
a
ls()
mybd <- dmy("28 Sep 1992")
library(lubridate)
mybd <- dmy("28 Sep 1992")
format(mybd, format = " I was born on %B %d, %Y")
library(stringr)
library(stringr)
a <- "    asdfasdf    "
a
a<- str_trim(a)
a
str.trim( "     hello    ", side = left)
str_trim( "     hello    ", side = left)
str_trim( "     hello    ", side = "left")
str_trim( "     hello    ", side = "right")
str_pad("hello world")
str_pad("hello world", width = 2, side = "left")
str_pad("hello world", width = 6, side = "left", pad = 0)
str_pad(112, width = 6, side = "left", pad = 0)
str_pad(112, width = 6, side = "left", pad = space)
str_pad(112, width = 6, side = "left", pad = 1)
toUpper("hello world")
toupper("hello world")
tolower("Hello WORLD")
g <- c("m","M","Male", "male","F","Female")
grepl("m",g)
grep("m",g)
g[grep(m,g)]
g[grep("m",g)]
g[grep("m",g, ignore.case)]
g[grep("m",g, ignore.case= TRUE)]
g[grep("^m",g, ignore.case= TRUE)]
?regex
adist("aac" , "sex")
c <- c("male", "female")
g
adist(g,c)
d<-adist(g,c)
colnames(d)<- codes
colnames(d)<- "codes"
colnames(d)<- c
rownames(d) <- g
d
Sys.getlocale("lC_CTYPE")
Sys.getlocale("LC_CTYPE")
print("hello world")
class("hello world")
getwd()
read.csv("./data practice/warpbreaks.csv", header = TRUE)
url = "https://raw.github.com/vincentarelbundock/Rdatasets/master/csv/datasets/warpbreaks.csv"
download.file(url, destfile = "./data practice/ warpbreaks2.csv")
read.csv("./data practice/warpbreaks2.csv", header = TRUE)
a<- read.csv("./data practice/warpbreaks2.csv", header = TRUE)
getwd()
read.csv("./data practice/warpbreaks2.csv")
a <- read.csv( "./data practice/ warpbreaks2.csv", header= TRUE)
a
head(a,3)
tail(a,5)
b <- class(rows(a))
b <- class(a)
b
str(a)
sumamry(a)
summary(a)
dim(a)
str(a)
?warpbreaks
library(dplyr)
View(a)
a$breaks <- as.integer(a$breaks)
ls()
rm("b", "url")
a
str(a)
mean[1]
a <- mean[1]
typeof(a)
typeof(mean)
mean()
v<- factor(c("2", "3", "5", "7", "11"))
v
as.character(v)
v
str(v)
v <- as.character(v)
str(v)
v <- as.numeric(v)
v
str(v)
as.integer(v)
str(v)
v <- as.integer(v)
str(v)
getwd()
ls()
b<- readLines("./data practice/warpbreaks/datacleaning/R/answers/example.txt")
b
b<- readLines("./data practice/warpbreaks/datacleaning/R/answers/example.txt")
b
c<-grepl("^/", b)
c
b <- b[!c]
b
b<- readLines("./data practice/warpbreaks/datacleaning/R/answers/example.txt")
c <- grepl("^/", b)
comments <- b[c]
comments
non_comments <- b[!c]
non_comments
?substring
d <- substr(comments[1],3,length(comments[1]))
d
comments[1]
class(comments[1])
d <- substr(comments, 3, comments[1].length)
d <- substr(comments, 3, length(comments))
d
d <- substr(comments, 3, length(comments[1]))
d
d <- substr("comments", 3, 6)
d
d <- sub("//","", comments)
d
comments <- sub("// ","", comments)
comments
non_comments
non_comments <- non_comments[-1]
non_comments
?strsplit
strsplit(non_comments, ";")
non_comments<-strsplit(non_comments, ";")
non_comments
?append
x <- function(x){
ifelse(length(x)<3,append(x,NA,length(x)))
}
appendX(non_comments)
appendX(non_comments)
AppendX(non_comments)
lapply(non_comments,AppendX)
m<-lapply(non_comments,AppendX)
ls()
m<-lapply(non_comments,x)
AppendX <- function(x){
ifelse(length(x)<3,append(x,NA,length(x)))
}
x <- lapply(non_comments,AppendX)
?continue
AppendX <- function(x){
ifelse(length(x)<3,append(x,NA,length(x)),next)
}
x <- lapply(non_comments,AppendX)
AppendX <- function(x){
ifelse(length(x)<3,append(x,NA,length(x)), x)
}
x <- lapply(non_comments,AppendX)
x
AppendX <- function(x){
if(length(x)<3){
append(x,NA,length(x)
}
}
AppendX <- function(x){
if(length(x)<3){
append(x,NA,length(x))
}
}
x <- lapply(non_comments,AppendX)
x
AppendX <- function(x){
if(length(x)<3){
append(x,NA,length(x))
}else {
x = x
}
}
x <- lapply(non_comments,AppendX)
x
non_comments<-lapply(non_comments, AppendX)
non_comments
comments
AppendX <- function(x){
ifelse(length(x)<3, append(x,NA,length(x)),x = x)
}
b
nc<- b[!grepl("// ",b)]
nc
nc <- nc[-1]
nc <- strsplit(nc,";")
nc
x <- lapply(nc,AppendX)
non_comments
non_comments <- matrix(non_comments, unlist(non_comments), byrow = TRUE)
non_comments <- matrix(non_comments, unlist(non_comments),nrow=length(non_comments), byrow = TRUE)
class(non_comments)
class(unlist(non_comments))
h <- matrix(non_comments, unlist(non_comments),nrow=length(non_comments), byrow = TRUE)
h <- unlist(non_comments)
h
h<- matrix(non_comments, unlist(non_comments))
non_comments <- matrix(unlist(non_comments),nrow=length(non_comments), byrow = TRUE)
non_comments
comments
a<- grepl("Field [1-9]: ")
a<- grepl("Field [1-9]: ", comments)
a
s<- sub(a,"",comments)
s <- sub( grepl("Field [1-9]: ", comments), "", comments)
s <- gsub( grepl("Field [1-9]: ", comments), "", comments)
a
comments[a]
class(comments)
a
gsub(grepl("Field [1-9]: "), comments)
(grepl("Field [1-9]: ", comments))
grepl("Field [1-9]: ", comments)
sub("Field [1-9]: ","", comments)
comments<-sub("Field [1-9]: ","", comments)
comments
colnames(non_comments)<- comments
non_comments
info<- data.frame(non_comments)
info
code<-c("man", "woman")
install.packages("stringdist")
library(stringdist)
gen <- info$Gender
gen
m <- factor(gen, labels =  codes[i])
m <- factor(gen, labels =  code[i])
m <- factor(gen, labels =  code)
i <- amatch(gen, codes, maxDist = 4)
i <- amatch(gen, code, maxDist = 4)
i
gen
code
i <- amatch(gen, code, maxDist = 3)
i
i <- amatch(gen, code, maxDist = 2)
i
i <- amatch(gen, code, maxDist = 1)
i
i <- amatch(gen, code, maxDist = 4)
i
codes <- c("male", "female")
i <- amatch(gen, codes, maxDist = 4)
i
m <- factor(gen, levels = codes, labels=c("man", "woman"))
m
m <- factor(amatch(gen,codes,maxDist = 4), levels = codes, labels=c("man", "woman"))
m
codes
m <- factor(gen, levels = codes, labels=c("man", "woman"))
m
m <- factor(gen, levels = amatch(gen,codes,maxDist = 4), labels=c("man", "woman"))
m <- factor(gen,  labels=c("man", "woman"))
i
m <- factor(gen, levels= codes[i], labels = c("man", "woman"))
m <- factor(gen, levels= codes[i], labels = code)
m
m <- factor(gen, levels= codes[i])
codes[i]
factor(gen, labels=codes[i])
factor(codes[i], labels=code)
factor(gen, levels = codes[i])
factor(gen, levels = codes[i])
factor(gen, labels=codes[i])
factor(codes[i],levels= code)
x<-factor(codes[amatch(info$Gender,codes,maxDist = 4)],labels = c("man", "woman"))
x
info$Gender<-x
info
info$Gender<- factor(c("M", "male", "FemaLe", "fem."))
info$Gender<- factor(c("M", "male", "FemaLe", "fem."), levels=c("M", "male", "FemaLe", "fem.") )
info
colnames(info)
info$Age..in.years.<- as.integer(info$Age..in.years.)
info
info$Weight..in.kg.<- gsub(",",".",info$Weight..in.kg.)
info
info$Weight..in.kg. <- as.numeric(info$Weight..in.kg.)
info
class(info$Weight..in.kg.)
setwd("./data practice/warpbreaks/datacleaning")
setwd("/Exercises 2.1,2.2,2.3,2.4")
dir()
setwd("./Exercises 2.1,2.2,2.3,2.4")
getwd()
dir()
data <- readLines("./examples.csv")
data <- readLines("./example.txt")
data
str(data)
str(warpbreaks)
head(warpbreaks)
?warpbreaks
he number of breaks need not be numeric
warpbreaks$breaks <- as.numeric(warpbreaks$breaks)
class(warpbreaks$breaks)
mean[1]
typeof(mean)
v <- factor(c("2", "3", "5", "7", "11"))
## a
class(v)
file <- "./example.txt"
data <- readLines(file)
data
has_comments <- grepl("^//", data)
comments <- data[has_comments]
non_comments <- data[!has_comments]
comments
non_comments
has_comments <- grepl("^//", data)
comments <- data[has_comments]
non_comments <- data[!has_comments]
## c
non_comments
comments
has_comments <- grepl("^//", data)
comments <- data[has_comments]
non_comments <- data[!has_comments]
## c
non_comments
comments
file <- "./example.txt"
data <- readLines(file)
##b
has_comments <- grepl("^//", data)
comments <- data[has_comments]
non_comments <- data[!has_comments]
## c
non_comments
comments
library(lubridate)
date_created <- dmy(comments[1])
date_created
comments
a <- strsplit(non_comments, ";")
a
non_comments <- strsplit(non_comments, ";")
non_comments
AppendX <- function(x){
if(length(x)<3){
append(x,NA,length(x))
}else {
x = x
}
}
<- lapply(non_comments, AppendX)
s
s <- lapply(non_comments, AppendX)
s
non_comments <- lapply(non_comments, AppendX)
non_comments
<- matrix(unlist(non_comments), nrow = length(non_comments), byrow = TRUE)
non_comments
non_comments <- matrix(unlist(non_comments), nrow = length(non_comments), byrow = TRUE)
non_comments
comments
a <- sub("// Field 1: ","", comments)
a
a <- sub("// Field [1-9]: ","", comments)
a
comments <- sub("// Field [1-9]: ","", comments)
comments
class(comments)
comments <- comments[-1]
comments
colnames(non_comments) <- comments
colnames
non_comments
?data.frame
a <- data.frame(non_comments, stringsAsFactors = F)
a
class(a)
str(a)
info <- data.frame(non_comments, stringsAsFactors = F)
str(a)
info
str(info)
a
gen <- c("male", "femlae")
gen <- a$Gender
codes <- c("male", "female")
i <- amatch(gen, codes, maxDist = 4)
k <- factor(gen, codes[i])
k <- factor(gen, labels=codes[i])
k <- factor(labels=codes[i])
k <- factor(codes[i])
k
codes <- c("man", "woman")
i <- amatch(gen, codes, maxDist = 4)
codes[i]
i <- amatch(gen, codes, maxDist = 2)
codes[i]
a
codes<- c("male", "female")
i <- amatch(gen, codes,maxDist = 4)
k <- factor(codes[i], labels = c("man", "woman"))
k
k <- factor(codes[i], labels = c("man", "woman"), ordered= T)
k
k <- factor(codes[i], labels = c("man", "woman"), ordered= F)
k
k <- factor(c("male", "male", "female", "female"), labels = c("ma", "woma"))
k
k <- factor(gen, labels= c("man", "woman"))
k <- factor(codes[i], labels = c("woman", "an"), ordered= F)
k
k <- factor(codes[i], labels = c("woman", "man"), ordered= F)
k
library(stringdist)
i <- amatch(info$Gender, c("male", "female"))
i
library(stringdist)
i <- amatch(info$Gender, c("male", "female"), maxDist = 4)
i
k <- factor(gen , levels = c("man", "woman"), labels=i)
length(i)
k <- factor(gen , levels = c("man", "woman"), labels=i)
gen
k <- factor(codes[i] , levels = c("man", "woman"), labels=i)
k <- factor(codes[i] , levels = c("man", "woman"), labels=i)
codes[i]
k <- factor(i , levels = c("man", "woman"), labels=i)
k <- factor(codes[i] , levels = codes, labels=i)
k <- factor(gen , levels = codes, labels=i)
k <- factor(gen , levels = codes, labels=c("man", "woman"))
k
codes
k <- factor(codes[i], levels(f) <- list(man = "male", woman = "female"))
k <- factor(codes[i], levels= list(man = "male", woman = "female"))
k
k <- factor(codes[i], labells= list(man = "male", woman = "female"))
k <- factor(codes[i], labels= list(man = "male", woman = "female"))
k
k <- factor(codes[i], levels = list(man = "male", woman = "female"),labels= list(man = "male", woman = "female"))
k
i
k <- factor(codes[i])
k
levels(k) <- list(man = "male", woman = "female")
k
library(stringdist)
codes<- c("male", "female")
matches <- amatch(info$Gender, codes, maxDist = 4)
info$Gender <- factor(codes[matches])
levels(info$Gender) <- list(man = "male", woman = "female")
info
k
a
a$Age..in.years.
as.integer(a$Age..in.years.)
a
info$Age..in.years. <- as.integer(info$Age..in.years.)
info
info$Weight..in.kg. <- gsub(",",".", info$Weight..in.kg.)
info
info$Weight..in.kg. <- gsub(",",".", info$Weight..in.kg.)
info$Weight..in.kg. <- as.numeric(info$Weight..in.kg.)
info
str(info)
info
